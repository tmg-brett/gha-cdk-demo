name: test, build, and deploy application code

on: push

permissions:
  id-token: write
  contents: read

jobs:
  trivy-test:
    name: Trivy Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
  cdk-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: create dummy lambda zip
        run: touch lambda_function.zip
      - run: npm ci
        working-directory: ./cdk
      - run: npm run build --if-present
        working-directory: ./cdk
      - run: npm test
        working-directory: ./cdk
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: ./lambda
      - run: npm run build --if-present
        working-directory: ./lambda
      - run: npm test
        working-directory: ./lambda
  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - trivy-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
        working-directory: ./lambda
      - run: npm run build --if-present
        working-directory: ./lambda
      - name: build lambda zip
        working-directory: ./lambda
        run: |
          zip -r "../lambda_function.zip" .
      - uses: actions/upload-artifact@v4
        with:
          name: lambda_function
          path: lambda_function.zip
  deploy-sandbox:
    runs-on: ubuntu-latest
    needs:
      - build
      - cdk-test
    env:
      DEPLOY_ENV: sandbox
      DEPLOY_REGION: us-east-2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::855363317312:role/github-actions-trust-Role-UylPDdo2zxtX
          aws-region: ${{ env.DEPLOY_REGION }}
      - uses: actions/download-artifact@v4
        with:
          name: lambda_function
          path: lambda_function.zip
      - run: npm ci
        working-directory: ./cdk
      - run: npm run build --if-present
        working-directory: ./cdk
      - name: deploy lambda code
        working-directory: ./cdk
        run: |
          npx cdk deploy "DemoAppStack-${DEPLOY_ENV}-${DEPLOY_REGION}"\
            --require-approval never \
            --ci
